Aufgabe 2.2.2 Quiz: Wertebereiche einhalten

Was ist das Ergebnis des Ausdrucks 1000000 * 1000000? Fällt etwas auf? Warum
entsteht dieses Ergebnis?

Antwort: Das Ergebnis lautet: -727379968 und das falsche Ergebnis kommt daher, dass
         Java standardmäßig int benutzt und int kann nur zehnstellige Zahlen darstellen.


Aufgabe 2.2.3 Quiz: Nicht so genau genommen

Wenn man 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 - 1.0 berechnet, und
das Ergebnis mit System.out.println(…) ausgibt, ist die Ausgabe überraschend?

Antwort: Als Ausgabe erscheint -1.1102230246251565E-16 obwohl eine 0 zu erwarten ist.
         Das kommt daher, dass Gleitkommazahlen nicht so gut im Umgang mit der Genauigkeit sind.
         Eine 0.1 kann nicht so gut dargestellt werden und daher erscheint eine Zahl, die nur sehr
         nah an der 0 erscheint.


Aufgabe 2.2.5 Quiz: Unübersichtlichkeit vermeiden

Unter Clean Code versteht man eine Reihe von Best Practices, die dafür sorgen, dass
Code gut zu lesen und zu verstehen sowie wartbarer, erweiterbarer und testbarer ist.
Es gibt leider auch genug Gegenbeispiele.
Was ist an folgendem Beispiel ungünstig?
double höhe = 12.34;
double breite = 23.45;
double tmp = 2 * (höhe + breite);
System.out.println( tmp );
tmp = höhe * breite;
System.out.println( tmp );

Antwort: Die Variable tmp ist überflüssig. Man kann alleine mit der höhe und der breite arbeiten:
         
         double höhe = 12.34;
         double breite = 23.45;
         System.out.println( 2 * (höhe + breite) );
         System.out.println( höhe * breite );

         Anstatt die Variable tmp zwei mal zu zuweisen, können wir die Operationen gleich
         in die Methode rein schreiben.
